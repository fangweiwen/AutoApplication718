apply plugin: 'com.android.application'
def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.autoapplication"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1_00_00
        versionName "1.0.0"
        flavorDimensions "com.example.autoapplication"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        debug {
            // 显示Log
         /*   buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"*/
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
          //  signingConfig signingConfigs.debug
        }

        release {
          /*  // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"*/
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true

            // 移除无用的resource文件
            shrinkResources true
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
          //  signingConfig signingConfigs.release

        }
    }
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.getPackageApplication().outputDirectory = new File("${project.rootDir}/apk")
        }
        variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
         //   def channel = variant.productFlavors[0].name
            def type = variant.buildType.name
         //   apkData.outputFileName = "mxseg_${channel}${releaseTime()}_v${defaultConfig.versionName}"
            apkData.outputFileName = "auto_${releaseTime()}_v${defaultConfig.versionName}"
            if(type != 'release')
                apkData.outputFileName += "-${type}"
            apkData.outputFileName += '.apk'
        }
    }
    //渠道Flavors，配置不同风格的app,友盟渠道统计时用到
    productFlavors {
        "offical" {}
        "360" {}
        yingyongbao {}
        wandoujia {}
        baidu {}
        "91" {}
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
}
